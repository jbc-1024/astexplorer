"use strict";function _createForOfIteratorHelper(n,t){var r="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!r){if(Array.isArray(n)||(r=_unsupportedIterableToArray(n))||t&&n&&"number"==typeof n.length){r&&(n=r);var e=0,a=function(){};return{s:a,n:function(){return e>=n.length?{done:!0}:{done:!1,value:n[e++]}},e:function(t){function n(n){return t.apply(this,arguments)}return n.toString=function(){return t.toString()},n}(function(n){throw n}),f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,l=!1;return{s:function(){r=r.call(n)},n:function(){var n=r.next();return i=n.done,n},e:function(t){function n(n){return t.apply(this,arguments)}return n.toString=function(){return t.toString()},n}(function(n){l=!0,o=n}),f:function(){try{i||null==r.return||r.return()}finally{if(l)throw o}}}}function _unsupportedIterableToArray(n,t){if(n){if("string"==typeof n)return _arrayLikeToArray(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(n,t):void 0}}function _arrayLikeToArray(n,t){(null==t||t>n.length)&&(t=n.length);for(var r=0,e=new Array(t);r<t;r++)e[r]=n[r];return e}var _globalLangList=[["CSS","text/css",parseWithCsstree,"/**\n* drop some CSS here and explore\n* Enjoy!\n*/\n\n@media screen and (min-width: 480px) {\n    body {\n        background-color: lightgreen;\n    }\n}\n\n#main {\n    border: 1px solid black;\n}\n\nul li {\n    padding: 5px;\n}"],["JSX","text/jsx",parseWithJsxTree,"/**\n* Paste or drop some JSX here and explore\n* Enjoy!\n*/\n\nconst es = [\n    { id: 1, name: 'kkk' },\n    { id: 2, name: 'bbb' },\n    { id: 3, name: 'ccc' },\n]\n\nconst list = (\n    <ul>\n    {\n        es.map(e =>\n            <li key={ e.id }> { e.name }\n            </li>\n        )\n    }\n    </ul>\n)\n\nReact.render(list, document.body)\n"],["HTML","text/xml",parseWithHtmlTree,'<!DOCTYPE html>\n\x3c!-- Paste or drop some HTML here and explore --\x3e\n\x3c!-- Enjoy! --\x3e\n\n<html>\n    \n    <head></head>\n\n    <body>\n        <h1>First Heading</h1>\n        <p>First paragraph.</p>\n    </body>\n\n    \x3c!-- util --\x3e\n    <script src="util.js"><\/script>\n    \x3c!-- main --\x3e\n    <script src="main.js"><\/script>\n\n</html>'],["JavaScript","text/javascript",parseWithBabelTree,"/**\n* Paste or drop some JavaScript here and explore\n* Enjoy!\n*/\n\nconst log = console.log.bind(console)\n\nclass Person {\n    static new(...args) {\n        var o = new this(...args)\n        o.name = 'gua'\n        return o\n    }\n}\n\nconst __main = function() {\n    log('kbc', Person.new().name)\n}"]],htmlOfActiveLang=function(){var n=_globalLangList[0][0];return'\n    <div class="active-lang lang" data-lang="'.concat(n,'">\n        <span>').concat(n,"</span>\n    </div>\n    ")},htmlOfLangs=function(){var n,t="",r=_createForOfIteratorHelper(_globalLangList);try{for(r.s();!(n=r.n()).done;){var e=n.value[0];t+='\n        <li class="lang" data-lang="'.concat(e,'">\n            <span>').concat(e,"</span>\n        </li>\n        ")}}catch(n){r.e(n)}finally{r.f()}return'\n    <ul class="langs">\n        '.concat(t,"\n    </ul>\n    ")},setupLangList=function(){var n=e("#langlist"),t="\n    ".concat(htmlOfActiveLang(),"\n    ").concat(htmlOfLangs(),"\n    ");n.innerHTML=t},setNewLang=function(t){var n=_globalLangList.find(function(n){return n[0]==t}),r=n[1],e=n[3],a=globalEditorGet();a.setValue(e),a.setOption("mode",r),refresh()},parserByLang=function(t){return _globalLangList.find(function(n){return n[0]==t})[2]};