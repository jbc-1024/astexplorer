"use strict";function _createForOfIteratorHelper(r,e){var t="undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(!t){if(Array.isArray(r)||(t=_unsupportedIterableToArray(r))||e&&r&&"number"==typeof r.length){t&&(r=t);var n=0,o=function(){};return{s:o,n:function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}},e:function(e){function r(r){return e.apply(this,arguments)}return r.toString=function(){return e.toString()},r}(function(r){throw r}),f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,l=!1;return{s:function(){t=t.call(r)},n:function(){var r=t.next();return i=r.done,r},e:function(e){function r(r){return e.apply(this,arguments)}return r.toString=function(){return e.toString()},r}(function(r){l=!0,a=r}),f:function(){try{i||null==t.return||t.return()}finally{if(l)throw a}}}}function _unsupportedIterableToArray(r,e){if(r){if("string"==typeof r)return _arrayLikeToArray(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,e):void 0}}function _arrayLikeToArray(r,e){(null==e||e>r.length)&&(e=r.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=r[t];return n}var parse=function(r){var t=e("#langlist").querySelector(".active-lang").dataset.lang;return parserByLang(t)(r)},astFromCmCode=function(){var r=globalEditorGet().getValue();return parse(r)},activeModeName=function(){var r=e("#toolbar");return Array.from(r.querySelectorAll("button")).find(function(r){return r.classList.contains("active")}).dataset.mode},refreshTree=function(){var r=astFromCmCode();globalAstSet(r);var t=tagTree(r,[],null);e("#tree").innerHTML=t},colorTokenType=function(r){var e,t=_createForOfIteratorHelper(r);try{for(t.s();!(e=t.n()).done;){var n=e.value,o=n.type,a=n.value,i=TokenTypeColor[o][0],l=TokenTypeColor[o][1];n.type="<span style='color: ".concat(i,"'>").concat(o,"</span>"),n.value="<span style='color: ".concat(l,"'>").concat(a,"</span>")}}catch(r){t.e(r)}finally{t.f()}return r},refreshTokens=function(){var r=globalEditorGet().getValue(),t=new Lexer(r).getTokens();colorTokenType(t);var n=tagTokens(t);e("#tokens").innerHTML=n},refreshJson=function(){var r=e("#json"),t=CodeMirror(r,{lineNumbers:!0,indentUnit:2,styleActiveLine:!0,matchBrackets:!0,lineWrapping:!0,foldGutter:!0,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"],readOnly:!0,mode:"application/json"}),n=astFromCmCode();globalAstSet(n);var o=JSON.stringify(n,null,2);t.setValue(o)},refresh=function(){var r=e("#display"),t=activeModeName();"tree"==t?(r.innerHTML='<div id="tree"></div>',refreshTree()):"json"==t?(r.innerHTML='<div id="json"></div>',refreshJson()):"tokens"==t&&(r.innerHTML='<div id="tokens"></div>',refreshTokens())};